package com.yunhe.common.model.domain;

import java.util.ArrayList;
import java.util.List;

public class TicketsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tickets
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tickets
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tickets
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tickets
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    public TicketsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tickets
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tickets
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tickets
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tickets
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tickets
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tickets
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tickets
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tickets
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tickets
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tickets
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tickets
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andScenicSpotNameIsNull() {
            addCriterion("SCENIC_SPOT_NAME is null");
            return (Criteria) this;
        }

        public Criteria andScenicSpotNameIsNotNull() {
            addCriterion("SCENIC_SPOT_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andScenicSpotNameEqualTo(String value) {
            addCriterion("SCENIC_SPOT_NAME =", value, "scenicSpotName");
            return (Criteria) this;
        }

        public Criteria andScenicSpotNameNotEqualTo(String value) {
            addCriterion("SCENIC_SPOT_NAME <>", value, "scenicSpotName");
            return (Criteria) this;
        }

        public Criteria andScenicSpotNameGreaterThan(String value) {
            addCriterion("SCENIC_SPOT_NAME >", value, "scenicSpotName");
            return (Criteria) this;
        }

        public Criteria andScenicSpotNameGreaterThanOrEqualTo(String value) {
            addCriterion("SCENIC_SPOT_NAME >=", value, "scenicSpotName");
            return (Criteria) this;
        }

        public Criteria andScenicSpotNameLessThan(String value) {
            addCriterion("SCENIC_SPOT_NAME <", value, "scenicSpotName");
            return (Criteria) this;
        }

        public Criteria andScenicSpotNameLessThanOrEqualTo(String value) {
            addCriterion("SCENIC_SPOT_NAME <=", value, "scenicSpotName");
            return (Criteria) this;
        }

        public Criteria andScenicSpotNameLike(String value) {
            addCriterion("SCENIC_SPOT_NAME like", value, "scenicSpotName");
            return (Criteria) this;
        }

        public Criteria andScenicSpotNameNotLike(String value) {
            addCriterion("SCENIC_SPOT_NAME not like", value, "scenicSpotName");
            return (Criteria) this;
        }

        public Criteria andScenicSpotNameIn(List<String> values) {
            addCriterion("SCENIC_SPOT_NAME in", values, "scenicSpotName");
            return (Criteria) this;
        }

        public Criteria andScenicSpotNameNotIn(List<String> values) {
            addCriterion("SCENIC_SPOT_NAME not in", values, "scenicSpotName");
            return (Criteria) this;
        }

        public Criteria andScenicSpotNameBetween(String value1, String value2) {
            addCriterion("SCENIC_SPOT_NAME between", value1, value2, "scenicSpotName");
            return (Criteria) this;
        }

        public Criteria andScenicSpotNameNotBetween(String value1, String value2) {
            addCriterion("SCENIC_SPOT_NAME not between", value1, value2, "scenicSpotName");
            return (Criteria) this;
        }

        public Criteria andAdultTicketPriceIsNull() {
            addCriterion("ADULT_TICKET_PRICE is null");
            return (Criteria) this;
        }

        public Criteria andAdultTicketPriceIsNotNull() {
            addCriterion("ADULT_TICKET_PRICE is not null");
            return (Criteria) this;
        }

        public Criteria andAdultTicketPriceEqualTo(Double value) {
            addCriterion("ADULT_TICKET_PRICE =", value, "adultTicketPrice");
            return (Criteria) this;
        }

        public Criteria andAdultTicketPriceNotEqualTo(Double value) {
            addCriterion("ADULT_TICKET_PRICE <>", value, "adultTicketPrice");
            return (Criteria) this;
        }

        public Criteria andAdultTicketPriceGreaterThan(Double value) {
            addCriterion("ADULT_TICKET_PRICE >", value, "adultTicketPrice");
            return (Criteria) this;
        }

        public Criteria andAdultTicketPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("ADULT_TICKET_PRICE >=", value, "adultTicketPrice");
            return (Criteria) this;
        }

        public Criteria andAdultTicketPriceLessThan(Double value) {
            addCriterion("ADULT_TICKET_PRICE <", value, "adultTicketPrice");
            return (Criteria) this;
        }

        public Criteria andAdultTicketPriceLessThanOrEqualTo(Double value) {
            addCriterion("ADULT_TICKET_PRICE <=", value, "adultTicketPrice");
            return (Criteria) this;
        }

        public Criteria andAdultTicketPriceIn(List<Double> values) {
            addCriterion("ADULT_TICKET_PRICE in", values, "adultTicketPrice");
            return (Criteria) this;
        }

        public Criteria andAdultTicketPriceNotIn(List<Double> values) {
            addCriterion("ADULT_TICKET_PRICE not in", values, "adultTicketPrice");
            return (Criteria) this;
        }

        public Criteria andAdultTicketPriceBetween(Double value1, Double value2) {
            addCriterion("ADULT_TICKET_PRICE between", value1, value2, "adultTicketPrice");
            return (Criteria) this;
        }

        public Criteria andAdultTicketPriceNotBetween(Double value1, Double value2) {
            addCriterion("ADULT_TICKET_PRICE not between", value1, value2, "adultTicketPrice");
            return (Criteria) this;
        }

        public Criteria andChildTicketPriceIsNull() {
            addCriterion("CHILD_TICKET_PRICE is null");
            return (Criteria) this;
        }

        public Criteria andChildTicketPriceIsNotNull() {
            addCriterion("CHILD_TICKET_PRICE is not null");
            return (Criteria) this;
        }

        public Criteria andChildTicketPriceEqualTo(Double value) {
            addCriterion("CHILD_TICKET_PRICE =", value, "childTicketPrice");
            return (Criteria) this;
        }

        public Criteria andChildTicketPriceNotEqualTo(Double value) {
            addCriterion("CHILD_TICKET_PRICE <>", value, "childTicketPrice");
            return (Criteria) this;
        }

        public Criteria andChildTicketPriceGreaterThan(Double value) {
            addCriterion("CHILD_TICKET_PRICE >", value, "childTicketPrice");
            return (Criteria) this;
        }

        public Criteria andChildTicketPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("CHILD_TICKET_PRICE >=", value, "childTicketPrice");
            return (Criteria) this;
        }

        public Criteria andChildTicketPriceLessThan(Double value) {
            addCriterion("CHILD_TICKET_PRICE <", value, "childTicketPrice");
            return (Criteria) this;
        }

        public Criteria andChildTicketPriceLessThanOrEqualTo(Double value) {
            addCriterion("CHILD_TICKET_PRICE <=", value, "childTicketPrice");
            return (Criteria) this;
        }

        public Criteria andChildTicketPriceIn(List<Double> values) {
            addCriterion("CHILD_TICKET_PRICE in", values, "childTicketPrice");
            return (Criteria) this;
        }

        public Criteria andChildTicketPriceNotIn(List<Double> values) {
            addCriterion("CHILD_TICKET_PRICE not in", values, "childTicketPrice");
            return (Criteria) this;
        }

        public Criteria andChildTicketPriceBetween(Double value1, Double value2) {
            addCriterion("CHILD_TICKET_PRICE between", value1, value2, "childTicketPrice");
            return (Criteria) this;
        }

        public Criteria andChildTicketPriceNotBetween(Double value1, Double value2) {
            addCriterion("CHILD_TICKET_PRICE not between", value1, value2, "childTicketPrice");
            return (Criteria) this;
        }

        public Criteria andRemainingTicketsIsNull() {
            addCriterion("REMAINING_TICKETS is null");
            return (Criteria) this;
        }

        public Criteria andRemainingTicketsIsNotNull() {
            addCriterion("REMAINING_TICKETS is not null");
            return (Criteria) this;
        }

        public Criteria andRemainingTicketsEqualTo(Integer value) {
            addCriterion("REMAINING_TICKETS =", value, "remainingTickets");
            return (Criteria) this;
        }

        public Criteria andRemainingTicketsNotEqualTo(Integer value) {
            addCriterion("REMAINING_TICKETS <>", value, "remainingTickets");
            return (Criteria) this;
        }

        public Criteria andRemainingTicketsGreaterThan(Integer value) {
            addCriterion("REMAINING_TICKETS >", value, "remainingTickets");
            return (Criteria) this;
        }

        public Criteria andRemainingTicketsGreaterThanOrEqualTo(Integer value) {
            addCriterion("REMAINING_TICKETS >=", value, "remainingTickets");
            return (Criteria) this;
        }

        public Criteria andRemainingTicketsLessThan(Integer value) {
            addCriterion("REMAINING_TICKETS <", value, "remainingTickets");
            return (Criteria) this;
        }

        public Criteria andRemainingTicketsLessThanOrEqualTo(Integer value) {
            addCriterion("REMAINING_TICKETS <=", value, "remainingTickets");
            return (Criteria) this;
        }

        public Criteria andRemainingTicketsIn(List<Integer> values) {
            addCriterion("REMAINING_TICKETS in", values, "remainingTickets");
            return (Criteria) this;
        }

        public Criteria andRemainingTicketsNotIn(List<Integer> values) {
            addCriterion("REMAINING_TICKETS not in", values, "remainingTickets");
            return (Criteria) this;
        }

        public Criteria andRemainingTicketsBetween(Integer value1, Integer value2) {
            addCriterion("REMAINING_TICKETS between", value1, value2, "remainingTickets");
            return (Criteria) this;
        }

        public Criteria andRemainingTicketsNotBetween(Integer value1, Integer value2) {
            addCriterion("REMAINING_TICKETS not between", value1, value2, "remainingTickets");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tickets
     *
     * @mbg.generated do_not_delete_during_merge Mon Jan 11 12:58:19 CST 2021
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tickets
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}