package com.yunhe.common.mapper;

import com.yunhe.common.model.domain.ScenicSpots;
import com.yunhe.common.model.domain.ScenicSpotsExample;
import com.yunhe.common.model.domain.ScenicSpotsKey;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface ScenicSpotsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenic_spots
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    @SelectProvider(type=ScenicSpotsSqlProvider.class, method="countByExample")
    long countByExample(ScenicSpotsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenic_spots
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    @DeleteProvider(type=ScenicSpotsSqlProvider.class, method="deleteByExample")
    int deleteByExample(ScenicSpotsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenic_spots
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    @Delete({
        "delete from scenic_spots",
        "where SCENIC_SPOT_NAME = #{scenicSpotName,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(ScenicSpotsKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenic_spots
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    @Insert({
        "insert into scenic_spots (SCENIC_SPOT_NAME, PAYMENT_METHODS, ",
        "SCENIC_SPOT_ADDRESS)",
        "values (#{scenicSpotName,jdbcType=VARCHAR}, #{paymentMethods,jdbcType=VARCHAR}, ",
        "#{scenicSpotAddress,jdbcType=VARCHAR})"
    })
    int insert(ScenicSpots record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenic_spots
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    @InsertProvider(type=ScenicSpotsSqlProvider.class, method="insertSelective")
    int insertSelective(ScenicSpots record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenic_spots
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    @SelectProvider(type=ScenicSpotsSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="SCENIC_SPOT_NAME", property="scenicSpotName", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="PAYMENT_METHODS", property="paymentMethods", jdbcType=JdbcType.VARCHAR),
        @Result(column="SCENIC_SPOT_ADDRESS", property="scenicSpotAddress", jdbcType=JdbcType.VARCHAR)
    })
    List<ScenicSpots> selectByExample(ScenicSpotsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenic_spots
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    @Select({
        "select",
        "SCENIC_SPOT_NAME, PAYMENT_METHODS, SCENIC_SPOT_ADDRESS",
        "from scenic_spots",
        "where SCENIC_SPOT_NAME = #{scenicSpotName,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="SCENIC_SPOT_NAME", property="scenicSpotName", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="PAYMENT_METHODS", property="paymentMethods", jdbcType=JdbcType.VARCHAR),
        @Result(column="SCENIC_SPOT_ADDRESS", property="scenicSpotAddress", jdbcType=JdbcType.VARCHAR)
    })
    ScenicSpots selectByPrimaryKey(ScenicSpotsKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenic_spots
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    @UpdateProvider(type=ScenicSpotsSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") ScenicSpots record, @Param("example") ScenicSpotsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenic_spots
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    @UpdateProvider(type=ScenicSpotsSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") ScenicSpots record, @Param("example") ScenicSpotsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenic_spots
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    @UpdateProvider(type=ScenicSpotsSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(ScenicSpots record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenic_spots
     *
     * @mbg.generated Mon Jan 11 12:58:19 CST 2021
     */
    @Update({
        "update scenic_spots",
        "set PAYMENT_METHODS = #{paymentMethods,jdbcType=VARCHAR},",
          "SCENIC_SPOT_ADDRESS = #{scenicSpotAddress,jdbcType=VARCHAR}",
        "where SCENIC_SPOT_NAME = #{scenicSpotName,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(ScenicSpots record);
}