plugins {
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'java'
}

group 'com.yunhe'
version '1.0-SNAPSHOT'

ext {
    springBootVersion = '2.1.6.RELEASE'
    springCloudVersion = 'Greenwich.SR2'
    junitVersion = '4.12'
    lombokVersion = '1.18.2'
    mybatisSpringBootVersion = '1.3.0'
    springCloudAlibabaVserion = '2.1.0.RELEASE'
    mysqllVersion = '5.1.46'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'
//	apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    sourceCompatibility = 1.8

    // 依赖版本管理
    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVserion}"
            mavenBom "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisSpringBootVersion}"
            mavenBom "junit:junit:${junitVersion}"
            mavenBom "org.projectlombok:lombok:${lombokVersion}"
            mavenBom 'com.alibaba:druid:1.1.10'
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "mysql:mysql-connector-java:${mysqllVersion}"
        }
    }
    if (it.name != 'yh-eureka' && it.name != 'yh-common-exception' ) {
        dependencies {
            implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter'
            implementation 'mysql:mysql-connector-java:5.1.46'
            implementation 'com.alibaba:druid:1.1.10'
            implementation 'org.springframework.boot:spring-boot-starter-web'
            implementation 'org.springframework.boot:spring-boot-starter-actuator'
            implementation 'org.projectlombok:lombok'
        }
        if (it.name == 'yh-user' || it.name == 'yh-tickets' || it.name == 'yh-scenicSpots' || it.name == 'yh-orders' )
        dependencies {
            compile 'io.springfox:springfox-swagger2:2.6.1'
            compile 'io.springfox:springfox-swagger-ui:2.6.1'
        }
        if (it.name == "yh-common-object"){
            dependencies {
                compile 'com.google.guava:guava:23.4-jre'
            }
        }
    }

    // 依赖仓库定义
    repositories {
        //本地
        //mavenLocal()
        //阿里云
        /*
        maven {
            credentials {username "admin";  password "admin19881109"}
            url "http://dsp.sgool.cn:8887/nexus/content/groups/public/"
        }
        */
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
    }

    // 编译环境定义
    buildscript {
        repositories {
            //本地
            //mavenLocal()
            //阿里云
            /*
            maven {
                credentials {username "admin";  password "admin19881109"}
                url "http://dsp.sgool.cn:8887/nexus/content/groups/public/"
            }
            */
            maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
            mavenCentral()
        }
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        }
    }

    configurations.all {
        // 检查是否有更新，用于快照更新
        resolutionStrategy.cacheChangingModulesFor  0,'seconds'
    }
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }


}
